// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using _13TPI_Pet_Adoption_and_Foster_Centre_NZ.Data;

#nullable disable

namespace _13TPI_Pet_Adoption_and_Foster_Centre_NZ.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20250916023548_fixnames")]
    partial class fixnames
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Franchise", b =>
                {
                    b.Property<int>("FranchiseID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FranchiseID"));

                    b.Property<string>("FranchiseName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LocationID")
                        .HasColumnType("int");

                    b.HasKey("FranchiseID");

                    b.HasIndex("LocationID");

                    b.ToTable("Franchise");
                });

            modelBuilder.Entity("Payment", b =>
                {
                    b.Property<int>("PaymentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PaymentID"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("PaymentMethodID")
                        .HasColumnType("int");

                    b.Property<int>("PaymentStatusID")
                        .HasColumnType("int");

                    b.Property<int>("PaymentTypeID")
                        .HasColumnType("int");

                    b.Property<string>("UserID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PaymentID");

                    b.HasIndex("PaymentMethodID");

                    b.HasIndex("PaymentStatusID");

                    b.HasIndex("PaymentTypeID");

                    b.ToTable("Payment");
                });

            modelBuilder.Entity("Pet", b =>
                {
                    b.Property<int>("PetID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PetID"));

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PetGroupID")
                        .HasColumnType("int");

                    b.Property<int>("PetStatusID")
                        .HasColumnType("int");

                    b.HasKey("PetID");

                    b.HasIndex("PetGroupID");

                    b.HasIndex("PetStatusID");

                    b.ToTable("Pet");
                });

            modelBuilder.Entity("PetGroup", b =>
                {
                    b.Property<int>("PetGroupID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PetGroupID"));

                    b.Property<string>("PetGroupName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PetGroupID");

                    b.ToTable("PetGroup");
                });

            modelBuilder.Entity("Shelter", b =>
                {
                    b.Property<int>("ShelterID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ShelterID"));

                    b.Property<int>("FranchiseID")
                        .HasColumnType("int");

                    b.Property<int>("LocationID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ShelterTypeID")
                        .HasColumnType("int");

                    b.HasKey("ShelterID");

                    b.HasIndex("FranchiseID");

                    b.HasIndex("LocationID");

                    b.HasIndex("ShelterTypeID");

                    b.ToTable("Shelter");
                });

            modelBuilder.Entity("_13TPI_Pet_Adoption_and_Foster_Centre_NZ.Models.AccessLevel", b =>
                {
                    b.Property<int>("AccessLevelID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AccessLevelID"));

                    b.Property<string>("LevelName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("AccessLevelID");

                    b.ToTable("AccessLevel");
                });

            modelBuilder.Entity("_13TPI_Pet_Adoption_and_Foster_Centre_NZ.Models.AdminOffice", b =>
                {
                    b.Property<int>("AdminID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AdminID"));

                    b.Property<int>("AccessLevelID")
                        .HasMaxLength(20)
                        .HasColumnType("int");

                    b.Property<string>("ContactNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateHired")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("ImageName")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("LevelName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TitleID")
                        .HasColumnType("int");

                    b.Property<string>("TitleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("AdminID");

                    b.HasIndex("AccessLevelID");

                    b.ToTable("AdminOffice");
                });

            modelBuilder.Entity("_13TPI_Pet_Adoption_and_Foster_Centre_NZ.Models.Coordinator", b =>
                {
                    b.Property<int>("CoordinatorID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CoordinatorID"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FranchiseID")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PetGroupID")
                        .HasColumnType("int");

                    b.HasKey("CoordinatorID");

                    b.HasIndex("FranchiseID");

                    b.HasIndex("PetGroupID");

                    b.ToTable("Coordinator");
                });

            modelBuilder.Entity("_13TPI_Pet_Adoption_and_Foster_Centre_NZ.Models.Location", b =>
                {
                    b.Property<int>("LocationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LocationID"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PostCode")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("Region")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Surburb")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.HasKey("LocationID");

                    b.ToTable("Location");
                });

            modelBuilder.Entity("_13TPI_Pet_Adoption_and_Foster_Centre_NZ.Models.MedicalRecord", b =>
                {
                    b.Property<int>("MedicalRecordID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MedicalRecordID"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PetID")
                        .HasColumnType("int");

                    b.Property<int>("VaccinationStatusID")
                        .HasColumnType("int");

                    b.HasKey("MedicalRecordID");

                    b.HasIndex("PetID");

                    b.HasIndex("VaccinationStatusID");

                    b.ToTable("MedicalRecord");
                });

            modelBuilder.Entity("_13TPI_Pet_Adoption_and_Foster_Centre_NZ.Models.PaymentMethod", b =>
                {
                    b.Property<int>("PaymentMethodID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PaymentMethodID"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PaymentMethodID");

                    b.ToTable("PaymentMethod");
                });

            modelBuilder.Entity("_13TPI_Pet_Adoption_and_Foster_Centre_NZ.Models.PaymentStatus", b =>
                {
                    b.Property<int>("PaymentStatusID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PaymentStatusID"));

                    b.Property<string>("StatusName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PaymentStatusID");

                    b.ToTable("PaymentStatus");
                });

            modelBuilder.Entity("_13TPI_Pet_Adoption_and_Foster_Centre_NZ.Models.PaymentType", b =>
                {
                    b.Property<int>("PaymentTypeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PaymentTypeID"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PaymentTypeID");

                    b.ToTable("PaymentType");
                });

            modelBuilder.Entity("_13TPI_Pet_Adoption_and_Foster_Centre_NZ.Models.PetStatus", b =>
                {
                    b.Property<int>("PetStatusID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PetStatusID"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PetStatusID");

                    b.ToTable("PetStatus");
                });

            modelBuilder.Entity("_13TPI_Pet_Adoption_and_Foster_Centre_NZ.Models.ShelterType", b =>
                {
                    b.Property<int>("ShelterTypeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ShelterTypeID"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ShelterTypeID");

                    b.ToTable("ShelterType");
                });

            modelBuilder.Entity("_13TPI_Pet_Adoption_and_Foster_Centre_NZ.Models.Title", b =>
                {
                    b.Property<int>("TitleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TitleID"));

                    b.Property<string>("TitleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TitleID");

                    b.ToTable("Title");
                });

            modelBuilder.Entity("_13TPI_Pet_Adoption_and_Foster_Centre_NZ.Models.VaccinationStatus", b =>
                {
                    b.Property<int>("VaccinationStatusID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VaccinationStatusID"));

                    b.Property<string>("StatusName")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.HasKey("VaccinationStatusID");

                    b.ToTable("VaccinationStatus");
                });

            modelBuilder.Entity("Franchise", b =>
                {
                    b.HasOne("_13TPI_Pet_Adoption_and_Foster_Centre_NZ.Models.Location", "Location")
                        .WithMany("Franchises")
                        .HasForeignKey("LocationID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Location");
                });

            modelBuilder.Entity("Payment", b =>
                {
                    b.HasOne("_13TPI_Pet_Adoption_and_Foster_Centre_NZ.Models.PaymentMethod", "PaymentMethod")
                        .WithMany("Payments")
                        .HasForeignKey("PaymentMethodID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("_13TPI_Pet_Adoption_and_Foster_Centre_NZ.Models.PaymentStatus", "PaymentStatus")
                        .WithMany("Payments")
                        .HasForeignKey("PaymentStatusID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("_13TPI_Pet_Adoption_and_Foster_Centre_NZ.Models.PaymentType", "PaymentType")
                        .WithMany("Payments")
                        .HasForeignKey("PaymentTypeID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("PaymentMethod");

                    b.Navigation("PaymentStatus");

                    b.Navigation("PaymentType");
                });

            modelBuilder.Entity("Pet", b =>
                {
                    b.HasOne("PetGroup", "PetGroup")
                        .WithMany("Pets")
                        .HasForeignKey("PetGroupID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("_13TPI_Pet_Adoption_and_Foster_Centre_NZ.Models.PetStatus", "PetStatus")
                        .WithMany("Pets")
                        .HasForeignKey("PetStatusID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("PetGroup");

                    b.Navigation("PetStatus");
                });

            modelBuilder.Entity("Shelter", b =>
                {
                    b.HasOne("Franchise", "Franchise")
                        .WithMany("Shelters")
                        .HasForeignKey("FranchiseID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("_13TPI_Pet_Adoption_and_Foster_Centre_NZ.Models.Location", "Location")
                        .WithMany("Shelters")
                        .HasForeignKey("LocationID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("_13TPI_Pet_Adoption_and_Foster_Centre_NZ.Models.ShelterType", "ShelterType")
                        .WithMany("Shelters")
                        .HasForeignKey("ShelterTypeID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Franchise");

                    b.Navigation("Location");

                    b.Navigation("ShelterType");
                });

            modelBuilder.Entity("_13TPI_Pet_Adoption_and_Foster_Centre_NZ.Models.AdminOffice", b =>
                {
                    b.HasOne("_13TPI_Pet_Adoption_and_Foster_Centre_NZ.Models.AccessLevel", "AccessLevel")
                        .WithMany()
                        .HasForeignKey("AccessLevelID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AccessLevel");
                });

            modelBuilder.Entity("_13TPI_Pet_Adoption_and_Foster_Centre_NZ.Models.Coordinator", b =>
                {
                    b.HasOne("Franchise", "Franchise")
                        .WithMany("Coordinators")
                        .HasForeignKey("FranchiseID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PetGroup", "PetGroup")
                        .WithMany("Coordinators")
                        .HasForeignKey("PetGroupID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Franchise");

                    b.Navigation("PetGroup");
                });

            modelBuilder.Entity("_13TPI_Pet_Adoption_and_Foster_Centre_NZ.Models.MedicalRecord", b =>
                {
                    b.HasOne("Pet", "Pet")
                        .WithMany("MedicalRecords")
                        .HasForeignKey("PetID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("_13TPI_Pet_Adoption_and_Foster_Centre_NZ.Models.VaccinationStatus", "VaccinationStatus")
                        .WithMany("MedicalRecords")
                        .HasForeignKey("VaccinationStatusID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Pet");

                    b.Navigation("VaccinationStatus");
                });

            modelBuilder.Entity("Franchise", b =>
                {
                    b.Navigation("Coordinators");

                    b.Navigation("Shelters");
                });

            modelBuilder.Entity("Pet", b =>
                {
                    b.Navigation("MedicalRecords");
                });

            modelBuilder.Entity("PetGroup", b =>
                {
                    b.Navigation("Coordinators");

                    b.Navigation("Pets");
                });

            modelBuilder.Entity("_13TPI_Pet_Adoption_and_Foster_Centre_NZ.Models.Location", b =>
                {
                    b.Navigation("Franchises");

                    b.Navigation("Shelters");
                });

            modelBuilder.Entity("_13TPI_Pet_Adoption_and_Foster_Centre_NZ.Models.PaymentMethod", b =>
                {
                    b.Navigation("Payments");
                });

            modelBuilder.Entity("_13TPI_Pet_Adoption_and_Foster_Centre_NZ.Models.PaymentStatus", b =>
                {
                    b.Navigation("Payments");
                });

            modelBuilder.Entity("_13TPI_Pet_Adoption_and_Foster_Centre_NZ.Models.PaymentType", b =>
                {
                    b.Navigation("Payments");
                });

            modelBuilder.Entity("_13TPI_Pet_Adoption_and_Foster_Centre_NZ.Models.PetStatus", b =>
                {
                    b.Navigation("Pets");
                });

            modelBuilder.Entity("_13TPI_Pet_Adoption_and_Foster_Centre_NZ.Models.ShelterType", b =>
                {
                    b.Navigation("Shelters");
                });

            modelBuilder.Entity("_13TPI_Pet_Adoption_and_Foster_Centre_NZ.Models.VaccinationStatus", b =>
                {
                    b.Navigation("MedicalRecords");
                });
#pragma warning restore 612, 618
        }
    }
}
